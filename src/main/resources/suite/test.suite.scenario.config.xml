<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2010-2012 Grid Dynamics Consulting Services, Inc, All Rights Reserved
  ~ http://www.griddynamics.com
  ~
  ~ This library is free software; you can redistribute it and/or modify it under the terms of
  ~ the GNU Lesser General Public License as published by the Free Software Foundation; either
  ~ version 2.1 of the License, or any later version.
  ~
  ~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  ~ AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  ~ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  ~ DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
  ~ FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  ~ DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  ~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  ~ CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  ~ OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  ~ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  -->

<beans:beans
        xmlns="http://www.griddynamics.com/schema/jagger"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.griddynamics.com/schema/jagger
        http://www.griddynamics.com/schema/jagger.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd"
        >

    <beans:import resource="defaults.config.xml"/>
    <beans:import resource="invokers/invokers.conf.xml"/>

    <beans:bean id="endpointConfigurator" class="group.id.EndpointConfigurator">
        <beans:property name="urls" value="${test.service.endpoints}"/>
    </beans:bean>

    <scenario id="pageScenario" xsi:type="scenario-query-pool">
        <query-distributor xsi:type="query-distributor-round-robin"/>
        <invoker xsi:type="invoker-class" class="group.id.invoker.PageVisitorInvoker"/>
    </scenario>


    <beans:bean id="emptyTestQuery" class="com.griddynamics.jagger.invoker.http.HttpQuery">
        <beans:property name="method" value="GET" />
        <beans:property name="clientParams">
            <beans:map>
                <beans:entry key="http.protocol.allow-circular-redirects">
                    <beans:bean class="java.lang.Boolean">
                        <beans:constructor-arg value="false"/>
                    </beans:bean>
                </beans:entry>
                <beans:entry key="http.protocol.max-redirects">
                    <beans:bean class="java.lang.Integer">
                        <beans:constructor-arg value="2"/>
                    </beans:bean>
                </beans:entry>
                <beans:entry key="http.connection-manager.timeout">
                    <beans:bean class="java.lang.Long"><beans:constructor-arg value="5000" /></beans:bean>
                </beans:entry>
                <beans:entry key="http.protocol.max-redirects">
                    <beans:bean class="java.lang.Integer"><beans:constructor-arg value="0" /></beans:bean>
                </beans:entry>
            </beans:map>
        </beans:property>
    </beans:bean>


<!--SMOKE_TESTS!!!!!!!-->

    <beans:bean id="endpointsIterable-sleep-5ms" class="java.util.LinkedList">
        <beans:constructor-arg value="#{endpointConfigurator.getEndpoints('/sleep/5')}"/>
    </beans:bean>

     <test-description id="sleep-service-5ms" name="sleep-service-5ms" version="1">

         <scenario  xsi:type="scenario-query-pool">

             <query-distributor xsi:type="query-distributor-round-robin" />

             <invoker xsi:type="invoker-http"/>

             <endpoint-provider xsi:type="endpoint-provider-ref" ref="endpointsIterable-sleep-5ms"/>

             <query-provider xsi:type="query-provider-list">
                 <query-http>emptyTestQuery</query-http>

             </query-provider>

         </scenario>

    </test-description>


    <beans:bean id="endpointsIterable-sleep-50ms" class="java.util.LinkedList">
        <beans:constructor-arg value="#{endpointConfigurator.getEndpoints('/sleep/50')}"/>
    </beans:bean>

    <test-description id="sleep-service-50ms" name="sleep-service-50ms" version="1">

         <scenario  xsi:type="scenario-query-pool">
             <query-distributor xsi:type="query-distributor-round-robin"/>
             <invoker xsi:type="invoker-http"/>

             <endpoint-provider xsi:type="endpoint-provider-ref" ref="endpointsIterable-sleep-50ms"/>

             <query-provider xsi:type="query-provider-list">
                 <query-http>emptyTestQuery</query-http>
             </query-provider>

         </scenario>

    </test-description>


    <beans:bean id="endpointsIterable-sleep-50-150ms" class="java.util.LinkedList">
        <beans:constructor-arg value="#{endpointConfigurator.getEndpoints('/sleep/50-150')}"/>
    </beans:bean>

    <test-description id="sleep-service-50-150ms" name="sleep-service-50-150ms" version="1">

         <scenario  xsi:type="scenario-query-pool">
             <query-distributor xsi:type="query-distributor-round-robin"/>
             <invoker xsi:type="invoker-http"/>

             <endpoint-provider xsi:type="endpoint-provider-ref" ref="endpointsIterable-sleep-50-150ms"/>

             <query-provider xsi:type="query-provider-list">
                 <query-http>emptyTestQuery</query-http>
             </query-provider>

         </scenario>

    </test-description>


    <beans:bean id="endpointsIterable-pulse-service-30000-500" class="java.util.LinkedList">
        <beans:constructor-arg value="#{endpointConfigurator.getEndpoints('/sleep/pulse/30000/500')}"/>
    </beans:bean>

    <test-description id="pulse-service-30000-500-abstract" name="pulse-service-30000-500" version="1" >

        <scenario  xsi:type="scenario-query-pool">
             <query-distributor xsi:type="query-distributor-round-robin"/>
             <invoker xsi:type="invoker-http"/>

             <endpoint-provider xsi:type="endpoint-provider-ref" ref="endpointsIterable-pulse-service-30000-500"/>

             <query-provider xsi:type="query-provider-list">
                 <query-http>emptyTestQuery</query-http>
             </query-provider>

         </scenario>

    </test-description>


     <beans:bean id="endpointsIterable-load-cpu-service-10000000" class="java.util.LinkedList">
        <beans:constructor-arg value="#{endpointConfigurator.getEndpoints('/load/10000000')}"/>
    </beans:bean>

    <test-description id="load-cpu-service-10000000" name="load-cpu-service-10000000" version="1" >

        <scenario  xsi:type="scenario-query-pool">
             <query-distributor xsi:type="query-distributor-round-robin"/>
             <invoker xsi:type="invoker-http"/>

             <endpoint-provider xsi:type="endpoint-provider-ref" ref="endpointsIterable-load-cpu-service-10000000"/>

             <query-provider xsi:type="query-provider-list">
                 <query-http>emptyTestQuery</query-http>
             </query-provider>

         </scenario>

    </test-description>


    <beans:bean id="endpointsIterable-allocate-memory-service-1000000x200" class="java.util.LinkedList">
        <beans:constructor-arg value="#{endpointConfigurator.getEndpoints('/allocate/1000000x200')}"/>
    </beans:bean>

    <test-description id="allocate-memory-service-1000000x200" name="allocate-memory-service-1000000x200" version="1" >

        <scenario  xsi:type="scenario-query-pool">
             <query-distributor xsi:type="query-distributor-round-robin"/>
             <invoker xsi:type="invoker-http"/>

             <endpoint-provider xsi:type="endpoint-provider-ref" ref="endpointsIterable-allocate-memory-service-1000000x200"/>

             <query-provider xsi:type="query-provider-list">
                 <query-http>emptyTestQuery</query-http>
             </query-provider>

         </scenario>

    </test-description>


    <beans:bean id="endpointsIterable-tcp-service-10000" class="java.util.LinkedList">
        <beans:constructor-arg value="#{endpointConfigurator.getEndpoints('/net/text/10000')}"/>
    </beans:bean>

    <test-description id="tcp-service-10000" name="tcp-service-10000" version="1" >

        <scenario  xsi:type="scenario-query-pool">
             <query-distributor xsi:type="query-distributor-round-robin"/>
             <invoker xsi:type="invoker-http"/>

             <endpoint-provider xsi:type="endpoint-provider-ref" ref="endpointsIterable-tcp-service-10000"/>

             <query-provider xsi:type="query-provider-list">
                 <query-http>emptyTestQuery</query-http>
             </query-provider>

         </scenario>

    </test-description>

<!--SMOKE_TESTS!!!!!!!-->















    <test-description id="groovyScenarioExample" parent="default" calibration="true">
        <scenario xsi:type="scenario-ref" ref="groovyScenarioFactoryExample"/>
        <info-collectors>
            <validator xsi:type="validator-not-null-response"/>
        </info-collectors>
    </test-description>

    <test-description id="jaggerPageTest" parent="default" calibration="true">
        <scenario id="defaultScenario" xsi:type="scenario-query-pool" parent="pageScenario">

            <endpoint-provider xsi:type="endpoint-provider-list">
                <endpoint>https://jagger.griddynamics.net</endpoint>
            </endpoint-provider>

            <query-provider xsi:type="query-provider-list">
                <query>index.html</query>
                <query>screenshots.html</query>
                <query>download.html</query>
            </query-provider>

        </scenario>
    </test-description>

    <test-description id="jaggerRandomDistributorScenario" calibration="false">
        <scenario xsi:type="scenario-ref" ref="jaggerRandomScenario"/>
    </test-description>

    <test-description id="googlePageTest" parent="default" calibration="true">
        <scenario  xsi:type="scenario-query-pool" parent="pageScenario">

            <endpoint-provider xsi:type="endpoint-provider-list">
                <endpoint>http://google.com</endpoint>
                <endpoint>http://google.ru</endpoint>
            </endpoint-provider>

            <query-provider xsi:type="query-provider-list">
                <query></query>
            </query-provider>

        </scenario>
    </test-description>


    <test-description id="myTest" parent="new-test-description" calibration="true">
        <scenario  xsi:type="scenario-query-pool" parent="pageScenario">

            <endpoint-provider xsi:type="endpoint-provider-list">
                <endpoint>http://192.168.56.101:8080</endpoint>
            </endpoint-provider>

            <query-provider xsi:type="query-provider-list">
                <query>sleep/10</query>
            </query-provider>

        </scenario>
    </test-description>

    <test-description id="myTest2" parent="new-test-description" calibration="true">
        <scenario  xsi:type="scenario-query-pool" parent="pageScenario">

            <endpoint-provider xsi:type="endpoint-provider-list">
                <endpoint>http://192.168.56.101:8080</endpoint>
            </endpoint-provider>

            <query-provider xsi:type="query-provider-list">
                <query>sleep/5</query>
            </query-provider>

        </scenario>
    </test-description>

    <test-description id="groovyGooglePageTest" parent="default" calibration="true">
        <scenario  xsi:type="scenario-query-pool" parent="pageScenario">

            <endpoint-provider xsi:type="endpoint-provider-list">
                <endpoint>http://google.com</endpoint>
                <endpoint>http://google.ru</endpoint>
            </endpoint-provider>

            <query-provider xsi:type="query-provider-list">
                <query></query>
            </query-provider>

            <invoker xsi:type="invoker-class" class="group.id.groovy.GroovyInvokerDelegate"/>
        </scenario>
    </test-description>

    <test-description id="fileValidatorGooglePageTest"  parent="default" calibration="true">
        <scenario  xsi:type="scenario-query-pool" parent="pageScenario">

            <endpoint-provider xsi:type="endpoint-provider-list">
                <endpoint>http://google.com</endpoint>
                <endpoint>http://google.ru</endpoint>
            </endpoint-provider>

            <query-provider xsi:type="query-provider-list">
                <query></query>
            </query-provider>

        </scenario>

        <info-collectors parent="defaultCollectors">
            <validator xsi:type="validator-ref" ref="fileValidator"/>
        </info-collectors>
    </test-description>

    <test-description id="fileProviderJaggerPageTest" parent="googlePageTest">
        <scenario id="fileProviderScenario" xsi:type="scenario-query-pool" parent="pageScenario">
            <endpoint-provider xsi:type="endpoint-provider-ref" ref="fileEndpointProvider"/>
            <query-provider xsi:type="query-provider-ref" ref="fileQueryProvider"/>
        </scenario>
    </test-description>



</beans:beans>
